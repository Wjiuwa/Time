/* --- Global Styles & Variables --- */
:root {
    --bg-dark-blue: #0a0a20;
    --star-light: #ffffff;
    --nebula-purple: #4a004a;
    --nebula-blue: #00004a;
    --nebula-pink: #7d005e;
    --nebula-cyan: #004a4a;
    --planet-glow-start: #3a3a60;
    --planet-glow-end: #0a0a20; /* Matches background */
    --highlight-color: #4aff9e; /* Existing highlight */
    --text-color: #ffffff; /* Existing text color */
    --glass-border-color: rgba(255, 255, 255, 0.2);
}

/* --- Main Background Container --- */
body {
    margin: 0;
    padding: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden; /* Hide anything outside the viewport */
    background-color: var(--bg-dark-blue); /* Deep space base color */
    position: relative; /* For absolutely positioned elements within */
    font-family: 'Orbitron', sans-serif; /* Example font */
    color: var(--text-color);
    display: flex; /* Use flexbox for centering */
    flex-direction: column; /* Stack selector and clock vertically */
    align-items: center; /* Center horizontally */
    justify-content: center; /* Center vertically */
}

.clock-app-container {
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 1; /* Keep clock content above background */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    /* backdrop-filter: blur(0); Removed from here, moved to .clock-container */
    transition: backdrop-filter 0.5s ease;
}

/* --- Stars Layer --- */
/* Using pseudo-elements to create many stars efficiently with box-shadow */
/* These will be attached to the body or a container that covers the whole screen */
body::before,
body::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: rotateZ(45deg); /* Tilt to suggest movement */
    opacity: 0.8;
    z-index: -2; /* Behind everything */
}

body::before {
    /* Layer 1: Smaller, denser, faster stars */
    background: transparent;
    box-shadow:
        0 0 0 1px var(--star-light),
        100vw 100vh 0 1px var(--star-light),
        10vw 30vh 0 1px var(--star-light),
        90vw 70vh 0 1px var(--star-light),
        50vw 20vh 0 0.5px rgba(255, 255, 255, 0.8),
        20vw 80vh 0 0.5px rgba(255, 255, 255, 0.8),
        80vw 40vh 0 0.5px rgba(255, 255, 255, 0.8),
        30vw 10vh 0 0.5px rgba(255, 255, 255, 0.8),
        70vw 90vh 0 0.5px rgba(255, 255, 255, 0.8),
        40vw 60vh 0 0.5px rgba(255, 255, 255, 0.8),
        60vw 30vh 0 0.5px rgba(255, 255, 255, 0.8),
        15vw 55vh 0 0.5px rgba(255, 255, 255, 0.8);
    background-size: 2000px 2000px; /* How far the pattern repeats */
    animation: stars-move 100s linear infinite;
}

body::after {
    /* Layer 2: Larger, sparser, slower stars */
    background: transparent;
    box-shadow:
        0 0 0 1.5px var(--star-light),
        100vw 100vh 0 1.5px var(--star-light),
        20vw 10vh 0 1.5px rgba(255, 255, 255, 0.6),
        70vw 90vh 0 1.5px rgba(255, 255, 255, 0.6),
        40vw 30vh 0 1.5px rgba(255, 255, 255, 0.6),
        60vw 70vh 0 1.5px rgba(255, 255, 255, 0.6),
        85vw 5vh 0 1.5px rgba(255, 255, 255, 0.6),
        5vw 95vh 0 1.5px rgba(255, 255, 255, 0.6);
    background-size: 3000px 3000px; /* Larger repeat for slower stars */
    animation: stars-move 150s linear infinite reverse; /* Reverse for different movement */
    opacity: 0.6;
}

@keyframes stars-move {
    from {
        transform: rotateZ(0deg) translateX(0) translateY(0);
    }
    to {
        transform: rotateZ(360deg) translateX(100vw) translateY(100vh); /* Move and rotate */
    }
}


/* --- Nebula Effect (Radial Gradients) --- */
.nebula-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -3; /* Farthest back */
    background:
        /* Layer 1: Large, diffuse nebula clouds */
        radial-gradient(circle at 15% 85%, var(--nebula-purple) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, var(--nebula-blue) 0%, transparent 60%),
        radial-gradient(circle at 50% 50%, var(--nebula-pink) 0%, transparent 70%),
        radial-gradient(circle at 30% 20%, var(--nebula-cyan) 0%, transparent 65%);
    background-size: 150% 150%, 120% 120%, 180% 180%, 100% 100%; /* Different sizes for depth */
    background-position: top left, center right, bottom left, top right;
    animation: nebula-drift 200s ease-in-out infinite alternate;
    opacity: 0.7; /* Make it subtle */
}

@keyframes nebula-drift {
    from {
        background-position: 0% 0%, 100% 0%, 0% 100%, 100% 100%;
    }
    to {
        background-position: 20% 10%, 80% 10%, 20% 90%, 80% 90%;
    }
}

/* --- Distant Planet/Moon (Subtle Glow) --- */
.distant-planet {
    position: absolute;
    bottom: -50vh; /* Start off-screen */
    right: -50vw; /* Start off-screen */
    width: 150vh; /* Large size relative to viewport height */
    height: 150vh;
    border-radius: 50%;
    background: radial-gradient(circle at 50% 50%, var(--planet-glow-start) 0%, var(--planet-glow-end) 70%);
    opacity: 0.2; /* Very subtle */
    filter: blur(50px); /* Soft glow effect */
    z-index: -1; /* Behind everything else, but in front of nebula */
    animation: planet-float 300s ease-in-out infinite alternate;
}

@keyframes planet-float {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(-20vw, -20vh); /* Drifts slowly across screen */
    }
}

/* --- Optional: Foreground Particles (for depth) --- */
.foreground-particles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2; /* In front of clock content */
    pointer-events: none; /* Allows clicks to pass through to clocks */
    opacity: 0.3;
    background: transparent;
    box-shadow:
        0 0 0 0.2px rgba(255, 255, 255, 0.4),
        10vw 10vw 0 0.2px rgba(255, 255, 255, 0.4),
        5vw 5vw 0 0.2px rgba(255, 255, 255, 0.4),
        70vw 20vh 0 0.2px rgba(255, 255, 255, 0.4),
        30vw 80vh 0 0.2px rgba(255, 255, 255, 0.4); /* Sparse tiny dots */
    background-size: 100px 100px;
    animation: particles-drift 50s linear infinite;
}

@keyframes particles-drift {
    from {
        background-position: 0 0;
    }
    to {
        background-position: 100px 100px;
    }
}


/* --- Clock Container (holds all clock styles) --- */
.clock-container {
    background: rgba(255, 255, 255, 0.05); /* Very subtle background */
    backdrop-filter: blur(8px); /* Glassmorphism effect */
    border-radius: 20px;
    padding: 30px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4); /* Stronger shadow for depth */
    border: 1px solid rgba(255, 255, 255, 0.1); /* Subtle border */
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    min-width: 600px; /* Adjust as needed */
    min-height: 400px; /* Adjust as needed */
    overflow: hidden; /* Important for contained clocks */
    z-index: 1; /* Ensures it's above the background layers */
}

/* --- Clock Selector Styles --- */
.clock-selector {
    margin-bottom: 30px; /* Space between selector and clock */
    margin-top: 20px; /* Space from top edge */
    z-index: 2; /* Ensure selector is clickable above background */
}

.clock-selector label {
    color: var(--text-color);
    font-size: 1.1rem;
    margin-right: 10px;
    font-weight: 700;
}

.clock-selector select {
    padding: 10px 15px;
    font-size: 1rem;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    background: rgba(255, 255, 255, 0.15);
    color: var(--text-color);
    appearance: none; /* Remove default dropdown arrow */
    cursor: pointer;
    text-align: center;
    padding-right: 30px; /* Space for custom arrow if added */
    transition: all 0.3s ease;
    font-family: 'Orbitron', sans-serif;
}

.clock-selector select:hover {
    background: rgba(255, 255, 255, 0.25);
    border-color: rgba(255, 255, 255, 0.5);
}

.clock-selector select option {
    background: var(--bg-dark-blue); /* Dark background for options */
    color: var(--text-color);
}

/* --- Base Clock Styles (All clock types) --- */
.clock {
    display: none;
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 2rem;
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    transition: opacity 0.5s ease-in-out;
    opacity: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
}

.clock.active {
    display: flex;
    opacity: 1;
}


/* -------------------------
Analog Clock Styles
------------------------- */
.analog-clock {
    width: 300px;
    height: 300px;
    border-radius: 50%;
    background: linear-gradient(145deg, #1a1a2e, #0f0f1c); /* Darker, gradient background */
    border: 5px solid rgba(255, 255, 255, 0.3);
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5), inset 0 0 10px rgba(0, 0, 0, 0.3);
}

.analog-clock::before { /* Center circle */
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 280px; /* Inner circle */
    height: 280px;
    border-radius: 50%;
    background: radial-gradient(circle, #000 0%, #111 70%, #222 100%);
    z-index: 0;
}

.analog-clock .hand {
    position: absolute;
    bottom: 50%;
    left: 50%;
    transform-origin: bottom;
    background: var(--text-color); /* Default hand color */
    border-radius: 3px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    z-index: 1;
}

.analog-clock .hour {
    width: 6px;
    height: 25%;
    background: var(--highlight-color); /* Accent color */
}

.analog-clock .minute {
    width: 4px;
    height: 35%;
    background: var(--text-color);
}

.analog-clock .second {
    width: 2px;
    height: 40%;
    background: #ff4d4d; /* Red for seconds */
}

.analog-clock .center-dot {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: #333;
    border: 2px solid var(--highlight-color);
    transform: translate(-50%, -50%);
    z-index: 10;
    box-shadow: 0 0 8px var(--highlight-color);
}


/* -------------------------
Digital Clock Styles
------------------------- */
.digital-clock {
    background: rgba(0, 0, 0, 0.7);
    color: #ffffff; /* Neon green */
    padding: 20px 40px;
    border-radius: 15px;
    display: flex;
    align-items: baseline;
    gap: 15px;
    box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.6);
    font-family: 'Share Tech Mono', monospace; /* Monospace for digital look */
    text-shadow: 0 0 8px #ffffff, 0 0 15px #ffffff; /* Intense neon glow */
    width: auto;
    height: auto;
    max-width: 90%;
    border: 1px solid rgba(255, 255, 255, 0.3); /* Subtle green border */
}

.digital-clock div {
    text-align: center;
}

.digital-clock span {
    font-size: 3.5rem;
    font-weight: bold;
    display: block;
}

.digital-clock p {
    font-size: 0.8rem;
    opacity: 0.8;
    margin: 5px 0 0;
    text-transform: uppercase;
    letter-spacing: 1px;
}

/* -------------------------
Flip Clock Styles
------------------------- */
.flip-clock {
    display: flex;
    gap: 15px;
    transform-style: preserve-3d;
    perspective: 500px;
    width: auto;
    height: auto;
}

.flip-card {
    position: relative;
    width: 145px;
    height: 120px;
    perspective: 600px;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.flip-card .top,
.flip-card .bottom,
.flip-card .next-top,
.flip-card .next-bottom {
    position: absolute;
    width: 100%;
    height: 50%;
    background: linear-gradient(to bottom, #333, #222); /* Darker, subtle gradient */
    color: #eee;
    text-align: center;
    font-size: 3rem;
    font-weight: bold;
    line-height: 120px; /* Adjusted to fit the number for both top/bottom halves */
    overflow: hidden;
}

.flip-card .top,
.flip-card .next-top {
    top: 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    border-bottom-left-radius: 10;
    border-bottom-right-radius: 10;
}

.flip-card .bottom,
.flip-card .next-bottom {
    bottom: 0;
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    border-top-left-radius: 0;
    border-top-right-radius: 0;
}

.flip-card .top .top-number,
.flip-card .next-top .top-number {
    position: absolute;
    width: 100%;
    height: 100%;
    bottom: 0;
    line-height: 0;
    display: flex;
    align-items: flex-end;
    justify-content: center;
    padding-bottom: none;
}

.flip-card .bottom .bottom-number,
.flip-card .next-bottom .bottom-number {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    line-height: 0;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    padding-top: none;
}

.flip-card .top {
    z-index: 2;
    transform-origin: bottom;
    backface-visibility: hidden;
}

.flip-card .next-top {
    transform-origin: bottom;
    transform: rotateX(90deg);
    opacity: 0;
    z-index: 1;
    backface-visibility: hidden;
}

.flip-card .bottom {
    z-index: 1;
    backface-visibility: hidden;
}

.flip-card .next-bottom {
    z-index: 2;
    opacity: 0;
    transform: rotateX(-90deg);
    transform-origin: top;
    backface-visibility: hidden;
}

.flip-card.flip .top {
    animation: flipTop 0.6s ease-in forwards;
}

.flip-card.flip .next-top {
    animation: flipNextTop 0.6s ease-out forwards;
}

.flip-card.flip .bottom {
    animation: hideBottom 0.6s steps(1) forwards;
}

.flip-card.flip .next-bottom {
    animation: revealNextBottom 0.6s steps(1) forwards;
}

@keyframes flipTop {
    0% { transform: rotateX(0deg); opacity: 1; z-index: 4;}
    100% { transform: rotateX(-180deg); opacity: 1; z-index: 4;}
}

@keyframes flipNextTop {
    0% { transform: rotateX(180deg); opacity: 0; z-index: 3;}
    50% { opacity: 1; }
    100% { transform: rotateX(0deg); opacity: 1; z-index: 3;}
}

@keyframes hideBottom {
    0% { opacity: 1; }
    100% { opacity: 0; }
}

@keyframes revealNextBottom {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

.separator {
    font-size: 3rem;
    margin: 0 8px;
    color: #eee;
}

/* -------------------------
Circular Clock Styles
------------------------- */
.circular-clock {
    display: flex;
    gap: 20px;
    align-items: center;
    width: auto;
    height: auto;
}

.circular-clock .circle {
    position: relative;
    width: 100px;
    height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.circular-clock svg {
    position: absolute;
    width: 100%;
    height: 100%;
    transform: rotate(-90deg);
}

.circular-clock circle {
    fill: none;
    stroke-width: 8;
    stroke-linecap: round;
    transition: stroke-dasharray 0.3s ease-out;
}

.circular-clock circle:first-child {
    stroke: rgba(255, 255, 255, 0.2);
}

.circular-clock .hours circle:nth-child(2) {
    stroke: #ff6b6b; /* Reddish hue */
}

.circular-clock .minutes circle:nth-child(2) {
    stroke: #4ecdc4; /* Teal hue */
}

.circular-clock .seconds circle:nth-child(2) {
    stroke: #45b7d1; /* Blueish hue */
}

.circular-clock .text {
    position: relative;
    z-index: 1;
    font-size: 1.5rem;
    font-weight: bold;
    color: white;
}

/* -------------------------
Hourglass Clock Styles
------------------------- */
.hourglass-clock {
    flex-direction: column;
    align-items: center;
    gap: 20px;
    padding: 10px;
    width: auto;
    height: auto;
}

.hourglass {
    position: relative;
    width: 120px; /* Base width for hourglass */
    height: 250px; /* Base height for hourglass */
    background: transparent;
    overflow: hidden; /* Crucial for clipping sand */
    border: none;
    box-shadow: none;
}

/* Visual glass frame for the hourglass */
.hourglass::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: transparent;
    border-radius: 5px; /* Subtle rounding */
    /* Precise clip-path to define the hourglass glass shape */
    clip-path: polygon(
        15% 0%, 85% 0%,        /* Top edge */
        100% 15%, 100% 45%,    /* Right top curve */
        55% 50%, 45% 50%,      /* Neck points - define the narrowest part */
        0% 45%, 0% 15%,        /* Left top curve */
        15% 0%,                /* Close top bulb path */

        /* To make the outline continuous around the neck and bottom bulb */
        45% 50%, 55% 50%,      /* Retrace neck points for continuous outline */
        100% 55%, 100% 85%,    /* Right bottom curve */
        85% 100%, 15% 100%,    /* Bottom edge */
        0% 85%, 0% 55%         /* Left bottom curve */
    );
    z-index: 5; /* Ensure it's above everything else like sand and particles */
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.1), 0 0 15px rgba(0, 0, 0, 0.4); /* Outer shadow remains */
}

.wood-cap {
    width: 150px; /* Wider than glass for aesthetic */
    height: 15px;
    background: linear-gradient(to right, #8b4513, #a0522d); /* Wood texture */
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
    position: relative;
    z-index: 4; /* Above sand, below glass outline from ::before */
}

.top-wood-cap {
    margin-bottom: -20px; /* Overlap with glass */
}

.bottom-wood-cap {
    margin-top: -20px; /* Overlap with glass */
}

/* Chambers are containers for sand, defining their general area and clipping */
.chamber {
    position: absolute;
    width: 100%;
    height: 50%; /* Each chamber takes up half the hourglass height */
    overflow: hidden; /* CRUCIAL: Clips the sand inside */
    background: rgba(188, 186, 187, 0.05); /* Very subtle chamber background */
    z-index: 1; /* Sand is below neck opening and glass frame */
}

.top-chamber {
    top: 0;
    left: 0;
    /* This clip-path defines the *actual visible shape* of the sand for the top half.
       The Y-coordinates (e.g., 98%) are tweaked to ensure smooth transition at the neck. */
    clip-path: polygon(
        15% 0%, 85% 0%,
        100% 15%, 100% 45%,
        55% 98%, 45% 98%, /* Neck points for top sand - now slightly below actual 50% line */
        0% 45%, 0% 15%
    );
}

.bottom-chamber {
    bottom: 0;
    left: 0;
    /* This clip-path defines the *actual visible shape* of the sand for the bottom half.
       The Y-coordinates (e.g., 2%) are tweaked to ensure smooth transition at the neck. */
    clip-path: polygon(
        45% 2%, 55% 2%, /* Neck points for bottom sand - now slightly above actual 50% line */
        100% 55%, 100% 85%,
        85% 100%, 15% 100%,
        0% 85%, 0% 55%
    );
}

/* Sand styling */
.sand {
    position: absolute;
    left: 0;
    width: 100%;
    background-color: #f4c542; /* Sand color */
    transition: height 1s linear; /* Smooth height transition */
    z-index: 0; /* Sand is the base layer */
}

.top-sand {
    bottom: 0; /* Aligned to the bottom of its chamber */
    height: 100%; /* JS controls this percentage */
    /* Ensure the clip-path for sand matches its chamber for proper containment */
    /* clip-path: polygon(
        15% 0%, 85% 0%,
        100% 15%, 100% 45%,
        55% 98%, 45% 98%,
        0% 45%, 0% 15%
    ); */
}

.bottom-sand {
    bottom: 0; /* Changed to bottom: 0; so it grows upwards */
    height: 0%; /* JS controls this percentage, starts empty */
    /* Ensure the clip-path for sand matches its chamber for proper containment */
    clip-path: polygon(
        45% 2%, 55% 2%,
        100% 55%, 100% 85%,
        85% 100%, 15% 100%, 
        0% 85%, 0% 55%
    );
}

/* Hourglass neck opening for visual flow. Made truly transparent. */
.hourglass .neck-opening {
    position: absolute;
    top: calc(50% - 2px); /* Position it at the center of hourglass */
    left: 50%;
    transform: translateX(-50%);
    width: 10px; /* Width of the opening */
    height: 4px; /* Small height for the "neck" */
    background: rgba(222, 22, 22, 0); /* TRANSPARENT */
    border-radius: 2px;
    z-index: 3; /* Above sand, but below glass frame */
}

/* Hourglass Dots - new implementation */
.dots-container {
    position: absolute;
    top: 10;
    left: 0;
    width: 100%;
    height: 100%;
    z-index:2; /* Below glass outline, above sand */
    pointer-events: none; /* Crucial to not block clicks on main hourglass */
}

.hourglass-dot {
    position: absolute;
    background-color: rgba(255, 255, 255, 0.2); /* Subtle default color */
    border-radius: 50%;
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
    pointer-events: none; /* Cannot be clicked */
}

.hourglass-dot.hour-mark-dot {
    width: 6px;
    height: 6px;
    background-color: rgba(255, 255, 255, 0.4); /* Slightly brighter for hour marks */
}

.hourglass-dot.hour-mark-dot.active {
    background-color: var(--highlight-color); /* Your accent color for active hour */
    box-shadow: 0 0 6px var(--highlight-color), 0 0 12px var(--highlight-color);
}

.hourglass-dot.minute-mark-dot {
    width: 4px;
    height: 4px;
    background-color: rgba(255, 255, 255, 0.15); /* Keep a subtle default if you like, or remove this if you want it to appear only when active */
}

.hourglass-dot.minute-mark-dot.active-minute {
    background-color: var(--highlight-color); /* Use a red color for the active minute dot */
    box-shadow: 0 0 6px var(--highlight-color), 0 0 12px var(--highlight-color);
}

/* Sand Particle System */
.sand-particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background-color: #f4c542; /* Sand color */
    border-radius: 50%;
    pointer-events: none; /* Do not block clicks */
    z-index: 2; /* Above main sand, below glass frame and dots */
}